
// __app.js

;( function( $ ) {
	"use strict";

	window.body = $('body');
	
	var _this, label, placeholder, _template, navigation = $('#navigation');

	$.app = {
		
		initSandwich: function()
		{
			this.sandwich.init({
				keyHooks: !0,
				selector: '.js-sandwich-menu',
				wrapper: '.layout-wrapper',
				overlay: '#menu-overlay'
			});
		},

		initSelect: function()
		{
			$('select').selectbox();

			body.on('change', '.js-form-select', function(e){
				$(this).closest('.js-form-label').removeClass('error');
			});
		},

		initMask: function()
		{
			$(".js-phone-watcher").mask("+ 7 (999) 999-99-99");
		},
		
		initFastclick: function()
		{
			FastClick.attach(document.body);
		},

		initPopup: function()
		{
			$.popup.init('.js-open-popup', {
				cssPosition: !0,
				wrapper: '.layout-wrapper'
			});

			body.on('popup.after_open', function(e, popup){
				_this.preloadForm(popup, '.js-form-input');
			});
		},

		checkForm: function(element, isempty)
		{
			if (!isempty || (isempty && $.trim($(element).val()) == ''))
			{
				label = $(element).closest('.js-form-label');
				
				if (label.find('.selectbox').length && $.trim($(element).val()) !== '')
				{
					label.find('.selectbox').addClass('is-checked');
				}

				if (!label.find('.js-label-name').length)
				{
					if ($(element).hasClass('js-form-select'))
					{
						placeholder = $(element).data('placeholder');
					}
					else {
						placeholder = $(element).prop('placeholder');
						$(element).prop('placeholder', '');
					}

					if (placeholder.indexOf('*') >= 0)
					{
						placeholder = placeholder.replace('*', '<span class="form__label__star">*</span>');
					}

					_template = $(template('tmpl-form-label', { name: placeholder }));

					label.append(_template);

					if ($.trim($(element).val()) !== '')
					{
						label.addClass('focus');
					}
				}
			}
		},

		preloadForm: function(parent, class_name)
		{
			if ($(parent).find(class_name).length)
			{
				$(parent).find(class_name).each(function(){
					_this.checkForm($(this), !1);
				});
			}
		},

		initForm: function()
		{
			_this = this;
			
			_this.preloadForm('body', '.js-form-input');

			body.on('focus', '.js-form-input', function(e){
				_this.checkForm($(this), !1);
				$(this).closest('.js-form-label').addClass('focus');
			});

			body.on('select.open', function(e, select){
				$(select).closest('.js-form-label').addClass('focus');
			});

			body.on('select.close', function(e, select){
				var $select = $(select).closest('.js-form-label').find('.js-form-select');
				
				if ($.trim($select.val()) == '')
				{
					$(select).closest('.js-form-label').removeClass('focus');
				}
			});

			body.on('change', '.js-form-select', function(e){
				if ($.trim($(this).val()) == '')
				{
					$(this).closest('.js-form-label').removeClass('focus');
				}
			});

			body.on('blur', '.js-form-input', function(e){
				if ($.trim($(this).val()) == '')
				{
					$(this).closest('.js-form-label').removeClass('focus');
				}
			});
		},

		initFancyBox: function()
		{
			if (!is_undefined($.fn.fancybox))
			{
				$('.fancybox').fancybox();

				$('.fancybox-media').fancybox({
					openEffect  : 'none',
					closeEffect : 'none',
					helpers : {
						media : {},
						overlay: {
						  locked: false
						}
					}
				});

				$(".various").fancybox({
					maxWidth	: 800,
					maxHeight	: 600,
					fitToView	: false,
					width		: '70%',
					height		: '70%',
					autoSize	: false,
					closeClick	: false,
					openEffect	: 'none',
					closeEffect	: 'none',
					helpers: {
						overlay: {
						  locked: false
						}
					}
				});
			}
		},

		carousel: function()
		{
			if ($('#carousel').length > 0 && $('#carousel').find('.carousel__item').length > 1)
			{
				$('#carousel').slick({
					infinite: true,
					dots: false,
					draggable: true,
					speed: 170,
					slidesToShow: 5,
		  			slidesToScroll: 1,
					prevArrow: '<button type="button" class="carousel__navigation carousel__navigation_prev slick-prev"></button>',
					nextArrow: '<button type="button" class="carousel__navigation carousel__navigation_next slick-next"></button>',
					responsive: [
						{
							breakpoint: 1024,
							settings: {
								slidesToShow: 3
							}
						},
						{
							breakpoint: 600,
							settings: {
								slidesToShow: 2
							}
						},
						{
							breakpoint: 480,
							settings: {
								slidesToShow: 1
							}
						}
					]
				});
			}
		},

		slickSider: function()
		{
			if ($('#slider').length > 0 && $('#slider').find('.slider__item').length > 1)
			{
				$('#slider').slick({
					infinite: true,
					dots: true,
					draggable: false,
					speed: 300,
					fade: true,
					autoplay: true,
					autoplaySpeed: 4500,
					pauseOnHover: false,
					cssEase: 'ease',
					prevArrow: '<button type="button" class="slider__navigation slider__navigation_prev slick-prev"></button>',
					nextArrow: '<button type="button" class="slider__navigation slider__navigation_next slick-next"></button>'
				});
			}
		},

		disableHover: function()
		{
			var timer;
			window.addEventListener('scroll', function() {
				clearTimeout(timer);
				
				if(!body.hasClass('disable-hover')) {
					body.addClass('disable-hover');
				}

				timer = setTimeout(function(){
					body.removeClass('disable-hover');
				},500);
			}, false);
		},

		navFixed: function(top)
		{
			if (top >= 91)
			{
				if (!navigation.hasClass('fixed'))
				{
					navigation.addClass('fixed');
				}
			}
			else {
				navigation.removeClass('fixed');
			}
		},

		navigation: function()
		{
			var _this = this, submenu = $('#navigation-submenu');;

			_this.navFixed($(window).scrollTop());

			$(window).on('scroll', function(){
				_this.navFixed($(window).scrollTop());
			});

			body.on('mouseenter', '.navigation__item', function(){

				if ($(window).width() > 960)
				{
					var item = $(this), div, height;

					if (item.find('.submenu').length)
					{
						div = document.createElement('div');
						div.id = 'test-fixed';
						div.style.position = 'fixed';
						div.style.bacgroundColor = '#f00';
						div.innerHTML = item.find('.submenu').html();

						$(body).append(div);

						height = $('#test-fixed').outerHeight();

						$('#test-fixed').remove();

						$('#navigation-submenu').css({
							'height': height - 30
						});

						submenu.addClass('show');
						item.find('.submenu').addClass('show');

						setTimeout(function(){
							submenu.addClass('active');
							item.find('.submenu').addClass('active');
						}, 20);
					}
				}
			});

			body.on('mouseleave', '.navigation__item', function(e){
				var item = $(this);

				if ($(window).width() > 960)
				{
					if (item.find('.submenu').length)
					{
						item.find('.submenu').removeClass('active');

						submenu.removeClass('active');
						submenu.removeClass('show');

						item.find('.submenu').removeClass('show');
					}
				}
			});
			
		},

		initDocuments: function()
		{
			body.on('click', '.js-doc-trigger', function(e){
				e.preventDefault();

				var doc = $(this).closest('.doc');
				
				doc.find('.doc__content').slideToggle(300, function(){
					doc.toggleClass('open');
				});

				return !1;
			});

			body.on('mouseenter', '.js-doc-link', function(){
				$(this).closest('.js-doc-item').addClass('hover');
			});

			body.on('mouseleave', '.js-doc-link', function(){
				$(this).closest('.js-doc-item').removeClass('hover');
			});
		},

		initSearch: function()
		{
			var _search, _overlay, _form;

			_search = $(template('tmpl-search', {}));
			
			body.append(_search);
			
			_form = $('#search-form');
			_overlay = $('#search-overlay');

			body.on('click', '.js-search', function(e){
				if ($(window).width() > 960)
				{
					e.preventDefault();
					_overlay.addClass('visible');
					_form.addClass('visible');

					setTimeout(function(){
						_overlay.addClass('animate');
						_form.addClass('animate');
					}, 10);
				}
			});

			body.on('click', '#search-overlay', function(){
				_overlay.removeClass('animate');
				_form.removeClass('animate');

				setTimeout(function(){
					_overlay.removeClass('visible');
					_form.removeClass('visible');
				}, 400);
			});
		},

		initNav: function()
		{
			body.on('click', '.navigation__link', function(e){
				if ($(window).width() < 960)
				{
					if ($(this).closest('.navigation__item_dropdown').length)
					{
						e.preventDefault();
						$(this).closest('.navigation__item_dropdown').toggleClass('open');
					}
				}
			});

			body.on('click', '.submenu__item__link', function(e){
				if ($(window).width() < 960)
				{
					if ($(this).closest('.submenu__item_dropdown').length)
					{
						e.preventDefault();
						$(this).closest('.submenu__item_dropdown').toggleClass('open');
					}
				}
			});
		},

		init: function()
		{
			this.disableHover();

			this.initFastclick();
			this.initFancyBox();

			this.initNav();
			this.initForm();

			this.initPopup();
			this.initMask();
			this.initSelect();
			this.initSandwich();
			this.initDocuments();
			this.initSearch();

			this.slickSider();
			this.carousel();
			this.navigation();

			$.app.ajaxForm.init();
		}

	};

})( jQuery );


// _app.ajaxform.js

;( function( $ ) {
	"use strict";

	$.app = $.app = $.app || {};

	var body = $('body'), _this;

	$.app.ajaxForm = {

		config: {
			form_class: '.form-ajax',
			link_class: '.js-request-link',
			error_class: 'error',
			error_message: 'form__error-message',
			form_label: 'form__label',
			checkbox_label: 'control'
		},

		callback_stack: {},

		extend: function(config)
		{
			_this = this;

			if (typeof config !== 'undefined')
        	{
        		var x;
        		for (x in config)
        		{
        			if (typeof _this.config[x] !== 'undefined')
        				_this.config[x] = config[x];
        		}
        	}
		},

		default_handler: function(form, response)
		{
			_this = this;

		    if (response.status)
		    {
		        if (response.hasOwnProperty('redirect_url'))
		        {
		            window.location.href = response.redirect_url;
		        }
		    }
		    else if (response.errors)
		    {
		        _this.validation(form, response.errors);
		    }
		    
		    if (response.hasOwnProperty('message') && response.message !== '')
		    {
		    	if (form.find('.js-form-result').length)
		    	{
		    		form.find('.js-form-result').append(template('tmpl-form-success', { message: response.message }));
		    		form.find('.js-form-result').addClass('active');
		    	}
		    	
		    	if (form.find('.js-form-button').length)
		    	{
		    		form.find('.js-form-button').removeClass('active');
		    	}
		    }
		},

		validation: function(form, errors)
		{
			_this = this;

		    form.find('.' + _this.config.error_class).removeClass(_this.config.error_class);
		    form.find('.' + _this.config.error_message).remove();
		    
		    var fieldName, field;

		    setTimeout(function() {
			    if (errors)
			    {
			       	for(fieldName in errors)
			        {
						// if (form.find('input[name="'+fieldName+'"]').length > 0)
						// {
						// 	field = form.find('input[name="'+fieldName+'"]');
						// }

						// if (form.find('select[name="'+fieldName+'"]').length > 0)
						// {
						// 	field = form.find('select[name="'+fieldName+'"]');
						// }

						// if (form.find('textarea[name="'+fieldName+'"]').length > 0)
						// {
						// 	field = form.find('textarea[name="'+fieldName+'"]');
						// }

						field = form.find('[name="'+fieldName+'"]').closest('.' + _this.config.form_label);

			            if (form.find('[name="'+fieldName+'"]').closest('.' + _this.config.checkbox_label).length)
			            {
			                field = form.find('[name="'+fieldName+'"]').closest('.' + _this.config.checkbox_label);
			            }

			            if (typeof field !== 'undefined')
			            {
		                	field.addClass(_this.config.error_class);
		                	field.closest('.'+_this.config.form_label).append('<div class="' + _this.config.error_message + '">' + errors[fieldName] + '</div>');
		                }
			        }
			    }
		    }, 10);
		},

		upload: function()
		{
			_this = this;

		    body.on('submit', '.form-file-upload', function(e) {
		        return AIM.submit(this, {
		            onStart: function()
		            {

		            },
		            onComplete: function(result)
		            {
		                if (typeof result === 'object' && result.status === true && result.hasOwnProperty('photo_url'))
		                {

		                }
		            }
		        });
		    });
		    
		    $(document).on('change', '.upload_button_onchange', function(){
		        if ($(this).closest('.upload_button').find('.upload_button_field').length > 0)
		        {
		            $(this).closest('.upload_button').find('.upload_button_field').html($(this).val());
		        }
		    });
		},

		send: function(action, method, data, cb, err)
		{

			if (typeof cb !== 'function')
			{
				cb = function() {};
			}

			if (typeof err !== 'function')
			{
				err = function() {};
			}

			try {
		   	
		   		$.ajax({
		            url: action,
		            type: method,
		            data: data,
		            contentType: false,
					processData: method.toLowerCase() == 'get',
		            success: cb,
		            error: err,
		            dataType: 'JSON'
				});

		    } catch(e){}

		},

		initLink: function()
		{
			_this = this;

			body.on('submit', _this.config.form_class, function(e) {
		        e.preventDefault ? e.preventDefault() : e.returnValue = false;
	       		
	       		var link = $(this);

	       		if (link.data('is-busy')) {
					return;
				}

				link.data('is-busy', true);

	       		var action = ($(this).attr('href')) || $(this).data('action'),
	       			method = ($(this).data('method')) || 'get',
	       			data = {};

	       		_this.send(
	        		action,
	        		method,
	        		data,
		        	function(response)
		        	{
		            	if (link.data('callback') && _this.callback_stack.hasOwnProperty(link.data('callback')))
		                {
		                    _this.callback_stack[link.data('callback')](link, response);
		                }
		                else
		                {
		                    _this.default_handler(link, response);
		                }

		                if (response.status === true)
		                {
							
		                }

		            	link.data('is-busy', false);
		            },
		            function(response)
		            {
		                _this.default_handler(link, response);
		                link.data('is-busy', false);
		            }
	            );
	       	});
		},

		initForm: function()
		{
			_this = this;

			body.on('submit', _this.config.form_class, function(e) {
		        e.preventDefault ? e.preventDefault() : e.returnValue = false;

		        var form 	= $(this),
		        	action	= form.attr('action'),
	            	method	= (form.attr('method') || 'post'),
	            	data 	= !!window.FormData ? new FormData(form[0]) : form.serialize();

				if (form.data('is-busy')) {
					return;
				}

				form.data('is-busy', true);

				if (form.data('precallback') && _this.callback_stack.hasOwnProperty(form.data('precallback'))) {
					if(!_this.callback_stack[form.data('precallback')](form))
					{
						return false;
					}
				}

		        _this.send(
	        		action,
	        		method,
	        		data,
		        	function(response)
		        	{
		            	if (form.data('callback') && _this.callback_stack.hasOwnProperty(form.data('callback')))
		                {
		                    _this.callback_stack[form.data('callback')](form, response);
		                }
		                else
		                {
		                    _this.default_handler(form, response);
		                }

		                if (response.status === true)
		                {
							
		                }

		            	form.data('is-busy', false);
		            },
		            function(response)
		            {
		                _this.default_handler(form, response);
		                form.data('is-busy', false);
		            }
	            );
		    });
		},

		removeError: function()
		{
			_this = this;

			$('body').on('focus, click', '.js-form-input', function(){
				$(this).closest('.' + _this.config.form_label).removeClass(_this.config.error_class);
			});
		},

		init: function(config)
		{
			this.extend(config);
			
			this.initForm();
			this.initLink();
			this.removeError();
		}

	};

})( jQuery );


// _app.map.js

;(function ($) {
	"use strict";

	$.app = $.app = $.app || {};

	$.app.map = {
		
		config: {
			coords: {
				lat: 45.064400,
				lon: 38.953892
			},
			container: 'map-layer'
		},

		resize: function()
		{
			$(document.getElementById(this.config.container)).height($(window).height() - $('#header').height());
		},

		google: function()
		{
			var mapOptions = {
				zoom: 17,
				zoomControl: !1,
				panControl: !1,
				scrollwheel: !1,
				navigationControl: !1,
				mapTypeControl: !1,
				scaleControl: !1,
				draggable: !0,
				disableDoubleClickZoom: !1,
		        streetViewControl: !1,
		        overviewMapControl: !1,
		    	center: new google.maps.LatLng(this.config.coords.lat, this.config.coords.lon)
			};
		    
		    var image = {
		        url: './images/marker@2x.png',
		        size: new google.maps.Size(32, 32),
		        origin: new google.maps.Point(0, 0),
		        scaledSize: new google.maps.Size(32, 32),
		        anchor: new google.maps.Point(32, 32)
		    };

		    var map = new google.maps.Map(document.getElementById(this.config.container), mapOptions);
		    var marker = new google.maps.Marker({
		        position: new google.maps.LatLng(this.config.coords.lat, this.config.coords.lon),
		        map: map,
		        icon: image,
		        flat: true,
		        title: 'г. Москва, Тессинский переулок, вл. 2-6, 19'
		    });

		    function toggleBounce()
		    {
		    	if (marker.getAnimation() !== null) {
					marker.setAnimation(null);
				} else {
					marker.setAnimation(google.maps.Animation.BOUNCE);

					setTimeout(function(){
						marker.setAnimation(null);
					}, 2000);
				}
			}

		    marker.addListener('click', toggleBounce);
		},

		init: function()
		{
			$.app.map.resize();
			$.app.map.google();

			var timeout;

			$(window).on('resize', function(){
				clearTimeout(timeout);
				timeout = setTimeout(function(){
					$.app.map.resize();
				}, 200);
			});
		}

	};

	window.initialize = $.app.map.init;

})(jQuery);


// _app.sandwich.js

;(function ($) {
	"use strict";

	$.app = $.app = $.app || {};

	var _this;

	$.app.sandwich = {

		config: {
			keyHooks: !1,
			selector: '.js-sandwich-menu',
            wrapper: '.layout-wrapper',
            overlay: '.overlay'
		},

		extend: function(config)
		{
			_this = this;

			if (typeof config !== 'undefined')
        	{
        		var x;
        		for (x in config)
        		{
        			if (typeof _this.config[x] !== 'undefined')
        				_this.config[x] = config[x];
        		}
        	}
		},

		isOpen: function()
		{
			return body.hasClass('page-visible');
		},

		hide: function()
		{
			body.removeClass('page-open');

	        setTimeout(function(){
				body.removeClass('page-visible');
			}, 10);

	        $(this.config.overlay).css({
	            'visibility': 'hidden'
	        });
		},

		toggle: function()
		{
			if (body.hasClass('page-visible'))
			{
				setTimeout(function(){
					body.removeClass('page-visible');
				}, 10);
			}
			else
			{
				setTimeout(function(){
					body.addClass('page-visible');
				}, 10);
			}

			body.toggleClass('page-open');

			var visibility = 'visible';

	        if (!body.hasClass('page-open'))
	        {
	            visibility = 'hidden'
	        }
	        
	        $(_this.config.overlay).css({
	            'visibility': visibility
	        });
		},

		sandwichTrigger: function()
		{
			_this = this;

			if (_this.config.keyHooks)
			{
				body.on('keydown', function(e) {
					if(e.keyCode == 27 && _this.isOpen())
					{
						_this.toggle();
					}
				});
	    	};

			body.on('click', _this.config.selector, function(e){
		        e.preventDefault ? e.preventDefault() : e.returnValue = false;
				_this.toggle();
			});
		},

		overlayTrigger: function()
		{
			_this = this;

			body.on('click', _this.config.overlay, function(e){
				_this.hide();
		    });
		},

		init: function(config)
		{
			this.extend(config);
			
			this.sandwichTrigger();
			this.overlayTrigger();
		}

	};

})(jQuery);


// _fns.js

var tools = {
    isString: function (obj) {
        return typeof obj === 'string';
    },
    isObject: function (obj) {
        return typeof obj === 'object';
    },
    isNumber: function (obj) {
        return typeof obj === 'number';
    },
    isUndefined: function (value) {
        return typeof value === 'undefined';
    },
    isDefined: function (value) {
        return typeof value !== 'undefined';
    }
};

function is_null(x)
{
	return x == null;
}

function is_undefined(x)
{
	return typeof(x) == 'undefined';
}

function is_touch_device()
{
    return ("ontouchstart" in window || window.DocumentTouch && document instanceof DocumentTouch || 'onmsgesturechange' in window);
}

function declOfNum(number, titles) {  
    cases = [2, 0, 1, 1, 1, 2];  
    return titles[ (number%100>4 && number%100<20)? 2 : cases[(number%10<5)?number%10:5] ];  
}
// declOfNum(count, ['найдена', 'найдено', 'найдены']);

var shuffle = function( array ) {
	return array.sort( function() {
		return Math.random() - 0.5;
	} );
};

function updateCaptcha(captcha, ev)
{
    ev.preventDefault();

    if ($(captcha).length)
    {
        $(captcha).attr('src', $(captcha).attr('src').split( '?' )[0] + '?v=' + Math.random());
    }

    return !1;
}
	
// function doOnOrientationChange()
// {
// 	switch(window.orientation) 
// 	{  
// 		case -90:
// 		case 90:
// 		alert('landscape');
// 		break; 
// 		default:
// 		alert('portrait');
// 		break; 
// 	}
// }

// window.addEventListener('orientationchange', doOnOrientationChange);

// doOnOrientationChange();


// Smoothly Scroll to page anchors
// var jump = function (e) {
// // Stop the "hard" jump.
// e.preventDefault();
// //Get the target
// var target = $(this).attr("href");
// // Use animated scrolling.  The .stop() prevents scroll queue.
// $('html,body').stop().animate({
//   // Find top-position of target-element and set it as scroll target.
//   scrollTop: $(target).offset().top
//   // Animation Delay:
//   }, 500, function () {
//     // Attach the hash (#jumptarget) to the page url.
//     location.hash = target;
//   });
// }

// // Instantiate this as follows in your document.ready();
// //$(document).ready(function () {
// //$('a[href*=#]').bind("click", jump);
// //return false;
// //});


// _selectbox.js

;(function($) {
    
    var body = $('body'),
        config = {
            pclass: 'form__row'
        };

    function iSelect(select)
    {
        if (select.hasClass('inited'))
        {
            return !1;
        }

        var selectbox, divSelect, divText, dropdown, li, selectHeight, liHeight, position, option, topOffset, bottomOffset, selectedText, liText, optionSelected, selectboxSelect, selectboxDropdown, selectboxTrigger, selectboxSelectText, optionText, ddlist, class_name, length, liItem, data, x;

        option = select.find('option');
        optionSelected = option.filter(':selected');
        
        if (optionSelected.length)
        {
            optionText = optionSelected.text();
        }
        else {
            optionText = option.filter(':first').text();
        }

        //Html
        ddlist = document.createElement('ul');
        ddlist.className = 'selectbox__dropdown__list';

        length = option.length;

        for (i = 0; i < length; i++)
        {
            class_name = '';

            if (option.eq(i).is(':selected')) class_name += ' selected sel';
            if (option.eq(i).is(':disabled')) class_name += ' disabled';
            
            if (i == (option.length-1))
            {
                class_name += ' last-child';
            }
            
            if (option.eq(i).data('classname'))
            {
                class_name += ' ' + option.eq(i).data('classname');
            }

            liItem = document.createElement('li');
            liItem.className = 'selectbox__dropdown__item' + class_name;
            liItem.appendChild(document.createTextNode(option.eq(i).text()));
            
            if (option.eq(i).data())
            {
                data = option.eq(i).data();
                
                for (x in data)
                {
                    liItem.dataset[x] = data[x];
                }
            }

            ddlist.appendChild(liItem);
        }

        selectbox = document.createElement('div');
        selectbox.className = 'selectbox';

        if (select.is(':disabled'))
        {
            selectbox.className = selectbox.className + ' is-disabled';
        }
        
        selectboxSelectText = document.createElement('div');
        selectboxSelectText.className = 'selectbox__select__text';
        selectboxSelectText.appendChild(document.createTextNode(optionText));

        selectboxSelect = document.createElement('div');
        selectboxSelect.className = 'selectbox__select';
        selectboxSelect.appendChild(selectboxSelectText);

        selectboxTrigger = document.createElement('div');
        selectboxTrigger.className = 'selectbox__trigger';
        selectboxTrigger.innerHTML = '<i class="selectbox__trigger__arrow"></i>';

        selectboxDropdown = document.createElement('div');
        selectboxDropdown.className = 'selectbox__dropdown';
        selectboxDropdown.appendChild(ddlist);
        
        selectbox.appendChild(selectboxSelect);
        selectbox.appendChild(selectboxTrigger);
        selectbox.appendChild(selectboxDropdown);

        select.before(selectbox).css({
            position: 'absolute',
            top: -9999
        });

        selectbox = $(selectbox);

        // Events
        divSelect   = $(selectboxSelect);
        divText     = $(selectboxSelectText);
        dropdown    = $(selectboxDropdown);
        
        li = dropdown.find('li');

        selectHeight = selectbox.outerHeight();
        
        if (dropdown.css('left') == 'auto')
        {
            dropdown.css({
                left: 0
            });
        }
        
        if (dropdown.css('top') == 'auto')
        {
            dropdown.css({
                top: selectHeight
            });
        }

        liHeight = li.outerHeight();
        position = dropdown.css('top');

        dropdown.hide();
        selectbox.removeClass('selectbox-active');
        
        divSelect.on('click', function (e){
            e.preventDefault();

            if (selectbox.hasClass('is-disabled'))
            {
                return !1;
            }

            topOffset = selectbox.offset().top;
            bottomOffset = $(window).height() - selectHeight - (topOffset - $(window).scrollTop());

            if (bottomOffset < 0 || bottomOffset < liHeight * 6)
            {
                dropdown.height('auto').css({
                    top: 'auto',
                    bottom: position
                });

                if (dropdown.outerHeight() > topOffset - $(window).scrollTop() - 20) {
                    dropdown.height(Math.floor((topOffset - $(window).scrollTop() - 20) / liHeight) * liHeight);
                }
            }
            else if (bottomOffset > liHeight * 6)
            {
                dropdown.height('auto').css({
                    bottom: 'auto',
                    top: position
                });

                if (dropdown.outerHeight() > bottomOffset - 20)
                {
                    dropdown.height(Math.floor((bottomOffset - 20) / liHeight) * liHeight);
                }
            }

            selectbox.css({
                zIndex: 1000
            });

            $('.form__row.overed').removeClass('overed');

            if (selectbox.closest('.form__row').length)
            {
                selectbox.closest('.form__row').addClass('overed');
            }

            if (dropdown.is(':hidden'))
            {
                $('div.dropdown:visible').hide();
                
                selectbox.addClass('selectbox-active');
                dropdown.show();

                body.trigger('select.open', divSelect);
            }
            else
            {
                selectbox.removeClass('selectbox-active');
                dropdown.hide();

                body.trigger('select.close', divSelect);
            }

            return !1;
        });

        li.hover(function () {
            $(this).siblings().removeClass('selected');
        });

        selectedText = li.filter('.selected').text();

        li.filter(':not(.disabled)').on('click', function () {
            liText = $(this).text();

            if (li.closest('.form__row').length)
            {
                li.closest('.form__row').removeClass('overed');
            }
            
            if (selectedText !== liText)
            {
                $(this).addClass('selected sel').siblings().removeClass('selected sel');
                option.prop('selected', !1).eq($(this).index()).prop('selected', !0);
                
                selectedText = liText;
                divText.text(liText);
                select.change();

                selectbox.addClass('is-checked');
            }

            dropdown.hide();

            selectbox.removeClass('selectbox-active');
            
            $('body').trigger('select.close', divSelect);

            return !1;
        });

        dropdown.mouseout(function () {
            dropdown.find('li.sel').addClass('selected');
        });
        
        select.focus(function() {
            $('.selectbox').removeClass('focused');
            selectbox.addClass('focused');
        }).keyup(function () {
            divText.text(option.filter(':selected').text());
            li.removeClass('selected sel').eq(option.filter(':selected').index()).addClass('selected sel');
        });

        select.addClass('inited');

        $(document).on('click', function (e) {
            if (!$(e.target).parents().hasClass('selectbox'))
            {
                dropdown.hide().find('li.sel').addClass('selected');
                selectbox.removeClass('selectbox-active');
                selectbox.removeClass('focused');

                $('body').trigger('select.close', divSelect);

                if (selectbox.closest('.form__row').length)
                {
                    selectbox.closest('.form__row').removeClass('overed');
                }
            }
        });
    }

    $.fn.selectbox = function() {
        
        return this.each(function(){
            
            return (function(select){

                iSelect(select);

                select.on('refresh', function(){
                    select.prev('.selectbox').remove();
                    select.removeClass('inited');
                    iSelect(select);
                });

            })($(this))

        });

    };
})(jQuery);


// _viewport.js

;(function ( $, window, document ) {
	"use strict";

	var viewport = 0,
    	wheight = $(window).height(),
    	scrollTop;

    $.fn.viewport = function ( options ) {
        options = $.extend( {}, $.fn.viewport.options, options );

        $.fn.viewport.options.items = this;

        if (!$.fn.viewport.options.elements.length)
		{
			$.fn.viewport.calculate();
		}

		if ($.fn.viewport.options.elements.length)
		{
			$.fn.viewport.animate();
	    }

	    $(window).scroll(function(){
			$.fn.viewport.animate();
		});

	    $(window).resize(function(){
			$.fn.viewport.calculate();
		});
    };

    $.fn.viewport.options = {
        items: {},
        elements: {}
    };

	$.fn.viewport.calculate = function() {
		$.fn.viewport.options.elements = $.fn.viewport.options.items.map(function(){
			if ($(this).length) {
				return $(this);
			}
        });
	}

    $.fn.viewport.animate = function() {
		scrollTop = $(window).scrollTop();

		$.fn.viewport.options.elements.map(function(){
			viewport = scrollTop + wheight;

	        if ($(this).offset().top <= viewport && !$(this).hasClass('active'))
	        {
	        	$(this).addClass('active');
	        }
	    });
	}

})( jQuery, window, document );

$('.effected').viewport();


// init.js

$(window).load(function() {
	$.app.init();
});

//# sourceMappingURL=data:application/json;base64,
